int find_set(int v) {
    if(v == par[v]){
        return v;
    } 
    return par[v] = find_set(par[v]);
}
 
// Union 
void union_sets(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if(a != b){
        par[b] = a;
    }
    return;
}

// Union by size (size[i] = 1 initially)
void union_sets(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if (a != b) {
        if (size[a] < size[b])
            swap(a, b);
        par[b] = a;
        size[a] += size[b];
    }
}

// Union by rank (rank[i] = 0 initially)
void union_sets(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if (a != b) {
        if (rank[a] < rank[b])
            swap(a, b);
        par[b] = a;
        if (rank[a] == rank[b])
            rank[a]++;
    }
}